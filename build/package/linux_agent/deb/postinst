#!/bin/bash
set -e

# Create dedicated user and group if they don't exist
if ! getent group pbsplus >/dev/null 2>&1; then
    groupadd -r pbsplus
fi

if ! getent passwd pbsplus >/dev/null 2>&1; then
    useradd -r -g pbsplus -s /bin/false \
        -d /var/lib/pbs-plus-agent \
        -c "PBS Plus Agent" pbsplus
fi

# Set executable permissions
chmod +x /usr/bin/pbs-plus-agent
chmod +x /usr/bin/pbs-plus-updater

# Create necessary directories with proper ownership
mkdir -p /var/lib/pbs-plus-agent
mkdir -p /var/log/pbs-plus-agent
mkdir -p /run/pbs-plus-agent
mkdir -p /etc/pbs-plus-agent

# Set ownership and permissions
chown -R pbsplus:pbsplus /var/lib/pbs-plus-agent
chown -R pbsplus:pbsplus /var/log/pbs-plus-agent
chown -R pbsplus:pbsplus /run/pbs-plus-agent
chown -R pbsplus:pbsplus /etc/pbs-plus-agent

chmod 750 /var/lib/pbs-plus-agent
chmod 750 /var/log/pbs-plus-agent
chmod 755 /run/pbs-plus-agent
chmod 750 /etc/pbs-plus-agent

# Set binary ownership
chown root:pbsplus /usr/bin/pbs-plus-agent
chown root:pbsplus /usr/bin/pbs-plus-updater
chmod 755 /usr/bin/pbs-plus-agent
chmod 755 /usr/bin/pbs-plus-updater

# Add to comprehensive list of groups for Debian
debian_groups=(
    "backup" "disk" "adm" "sys" "staff" "shadow"
    "systemd-journal" "netdev" "lvm" "docker" 
    "libvirt" "kvm" "qemu" "ssl-cert"
)

for group in "${debian_groups[@]}"; do
    if getent group "$group" >/dev/null 2>&1; then
        usermod -a -G "$group" pbsplus
        echo "Added pbsplus to group: $group"
    fi
done

# Enhanced capabilities for comprehensive file access
setcap 'cap_dac_read_search,cap_dac_override,cap_fowner,cap_sys_admin,cap_sys_ptrace,cap_sys_rawio+ep' /usr/bin/pbs-plus-agent
setcap 'cap_dac_read_search,cap_dac_override,cap_fowner,cap_setuid,cap_setgid,cap_sys_admin,cap_sys_ptrace,cap_sys_rawio+ep' /usr/bin/pbs-plus-updater

# Set PAM limits
cat >> /etc/security/limits.conf << 'EOF'
pbsplus soft nofile 65536
pbsplus hard nofile 65536
pbsplus soft nproc 32768
pbsplus hard nproc 32768
EOF

# Enable systemd lingering
if command -v loginctl >/dev/null 2>&1; then
    loginctl enable-linger pbsplus 2>/dev/null || true
fi

# Handle AppArmor if present
if command -v aa-status >/dev/null 2>&1 && aa-status --enabled 2>/dev/null; then
    echo "AppArmor detected. You may need to create profiles for:"
    echo "  - /usr/bin/pbs-plus-agent"
    echo "  - /usr/bin/pbs-plus-updater"
    echo "Or temporarily disable AppArmor for these binaries."
fi

# Verify capabilities were set correctly
echo "Verifying capabilities:"
getcap /usr/bin/pbs-plus-agent
getcap /usr/bin/pbs-plus-updater

# Show final group memberships
echo "pbsplus user is member of groups:"
groups pbsplus

systemctl daemon-reload

# Enable the services to start on boot
systemctl enable pbs-plus-agent.service
systemctl enable pbs-plus-updater.service

# Start the services
systemctl restart pbs-plus-agent.service
systemctl restart pbs-plus-updater.service

echo "Setup complete. Check service status with:"
echo "  systemctl status pbs-plus-agent.service"
echo "  systemctl status pbs-plus-updater.service"

exit 0
