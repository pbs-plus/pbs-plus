name: Development Build

on:
  push:
    branches:
      - main

permissions:
  contents: write
  packages: write

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'
          cache: true

      - name: Download dependencies
        run: go mod download

      - name: Run tests
        run: GODEBUG=gctrace=1 go test -v -race ./... -count=1 -timeout 1m

  dev-build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.24"

      - name: Install UPX
        run: |
          sudo apt-get update
          sudo apt-get install -y upx

      - name: Set environment variables
        run: |
          echo "GITHUB_REPOSITORY_OWNER=${{ github.repository_owner }}" >> $GITHUB_ENV
          echo "GITHUB_REPOSITORY_NAME=${{ github.event.repository.name }}" >> $GITHUB_ENV
          echo "GITHUB_REPOSITORY=${{ github.repository }}" >> $GITHUB_ENV

      - name: Prepare packaging files
        run: |
          chmod 755 ./build/package/server/debian/DEBIAN/postinst
          # Uncomment if you have linux agent
          # chmod 755 ./build/package/linux_agent/debian/DEBIAN/postinst

      - name: Delete existing dev tag
        continue-on-error: true
        run: |
          git tag -d dev || true
          git push origin :refs/tags/dev || true

      - name: Run GoReleaser (Dev)
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: latest
          args: release --tag=dev --config .goreleaser.dev.yaml --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docker-build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker - Metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/pbs-plus/pbs-plus-agent
          tags: |
            type=raw,value=dev
          flavor: latest=false

      - name: Docker - Build / Push
        uses: docker/build-push-action@v5
        with:
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
