on:
  release:
    types: [created]

permissions:
    contents: write
    packages: write

jobs:
  release-linux-amd64:
    name: release linux/amd64
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: wangyoucao577/go-release-action@v1
      id: go_build
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        goos: linux
        goarch: amd64
        compress_assets: false
        executable_compression: upx 
        project_path: ./cmd/pbs_plus
        ldflags: "-X 'main.Version=${{ github.event.release.tag_name }}'"
    - name: pre-packaging script
      env:
        BINARY_PATH: ${{steps.go_build.outputs.release_asset_dir}}
      run: ./build/package/server/pre-packaging.sh 
    - uses: jiro4989/build-deb-action@v3
      with:
        package: ${{ github.event.repository.name }} 
        package_root: build/package/server/debian
        maintainer: Son Roy Almerol <github@snry.me> 
        version: ${{ github.ref }} # refs/tags/v*.*.*
        arch: 'amd64'
        depends: 'proxmox-backup-server (>= 3.2), proxmox-backup-client (>= 3.2.5), fuse3, redis'
        desc: 'PBS Plus is a project focused on extending Proxmox Backup Server (PBS) with advanced features to create a more competitive backup solution'
        homepage: 'https://github.com/${{ github.repository }}'
    - name: Publish Release Assets
      uses: softprops/action-gh-release@v1
      with:
        tag: ${{ github.event.release.tag_name }}
        files: ./*.deb
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        #  release-build-linux-amd64-agent:
        #    name: release build agent linux/amd64
        #    runs-on: ubuntu-latest
        #    steps:
        #    - uses: actions/checkout@v4
        #    - uses: wangyoucao577/go-release-action@v1
        #      id: go_build
        #      with:
        #        github_token: ${{ secrets.GITHUB_TOKEN }}
        #        goos: linux
        #        goarch: amd64
        #        compress_assets: false
        #        executable_compression: upx
        #        binary_name: pbs-plus-agent
        #        project_path: ./cmd/linux_agent
        #        ldflags: "-X 'main.Version=${{ github.event.release.tag_name }}'"
        #    - name: pre-packaging script
        #      env:
        #        BINARY_PATH: ${{ steps.go_build.outputs.release_asset_dir }}
        #      run: ./build/package/linux_agent/pre-packaging.sh
        #    - uses: jiro4989/build-deb-action@v3
        #      with:
        #        package: pbs-plus-agent
        #        package_root: build/package/linux_agent/debian
        #        maintainer: Son Roy Almerol <github@snry.me>
        #        version: ${{ github.ref }} # refs/tags/v*.*.*
        #        arch: 'amd64'
        #        desc: 'An agent for PBS Plus: project focused on extending Proxmox Backup Server (PBS) with advanced features to create a more competitive backup solution'
        #        homepage: 'https://github.com/${{ github.repository }}'
        #    - name: Publish Release Assets
        #      uses: softprops/action-gh-release@v1
        #      with:
        #        tag: ${{ github.event.release.tag_name }}
        #        files: ./*.deb
        #      env:
        #        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release-windows-amd64-agent:
    name: release agent windows/amd64
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: wangyoucao577/go-release-action@v1
      id: go_build
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        goos: windows 
        goarch: amd64
        compress_assets: false
        executable_compression: upx 
        binary_name: pbs-plus-agent
        project_path: ./cmd/windows_agent
        ldflags: "-H=windowsgui -X 'main.Version=${{ github.event.release.tag_name }}'"
    - uses: actions/upload-artifact@v4
      with:
        name: windows-binary
        path: ${{steps.go_build.outputs.release_asset_dir}}/pbs-plus-agent.exe

  release-windows-amd64-updater:
    name: release updater windows/amd64
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: wangyoucao577/go-release-action@v1
      id: go_build_updater
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        goos: windows 
        goarch: amd64
        compress_assets: false
        executable_compression: upx 
        binary_name: pbs-plus-updater
        project_path: ./cmd/windows_updater
        ldflags: "-H=windowsgui"
    - uses: actions/upload-artifact@v4
      with:
        name: windows-updater-binary
        path: ${{steps.go_build_updater.outputs.release_asset_dir}}/pbs-plus-updater.exe

        #  release-docker-agent:
        #    name: release agent docker
        #    runs-on: ubuntu-latest
        #    steps:
        #      - name: Checkout
        #        uses: actions/checkout@v4
        #
        #      - name: Login to GitHub Container Registry
        #        uses: docker/login-action@v3
        #        with:
        #          registry: ghcr.io
        #          username: ${{ github.actor }}
        #          password: ${{ secrets.GITHUB_TOKEN }}
        #
        #      - name: Set up QEMU
        #        uses: docker/setup-qemu-action@v3
        #
        #      - name: Set up Docker Buildx
        #        uses: docker/setup-buildx-action@v3
        #
        #      - name: Docker - Metadata
        #        id: meta
        #        uses: docker/metadata-action@v5
        #        with:
        #          images: |
        #            ghcr.io/pbs-plus/pbs-plus-agent
        #          tags: |
        #            type=semver,pattern={{version}},prefix=v
        #            type=semver,pattern={{major}}.{{minor}},prefix=v
        #            type=semver,pattern={{major}},prefix=v
        #          flavor: latest=true
        #
        #      - name: Docker - Build / Push
        #        id: docker_build
        #        uses: docker/build-push-action@v5
        #        with:
        #          platforms: linux/amd64,linux/arm64
        #          push: true
        #          tags: ${{ steps.meta.outputs.tags }}
